Sure! Here's an example of a movement and navigation algorithm that uses the ultrasonic sensors to avoid obstacles:

python

import RPi.GPIO as GPIO
import time

GPIO.setmode(GPIO.BOARD)

# Ultrasonic sensor pins
TRIG_PIN = 11
ECHO_PIN = 12

# Motor pins
LEFT_MOTOR_PIN1 = 16
LEFT_MOTOR_PIN2 = 18
RIGHT_MOTOR_PIN1 = 21
RIGHT_MOTOR_PIN2 = 23

GPIO.setup(TRIG_PIN, GPIO.OUT)
GPIO.setup(ECHO_PIN, GPIO.IN)

# Set motor pins as output
GPIO.setup(LEFT_MOTOR_PIN1, GPIO.OUT)
GPIO.setup(LEFT_MOTOR_PIN2, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_PIN1, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_PIN2, GPIO.OUT)

def forward():
    GPIO.output(LEFT_MOTOR_PIN1, True)
    GPIO.output(LEFT_MOTOR_PIN2, False)
    GPIO.output(RIGHT_MOTOR_PIN1, True)
    GPIO.output(RIGHT_MOTOR_PIN2, False)

def backward():
    GPIO.output(LEFT_MOTOR_PIN1, False)
    GPIO.output(LEFT_MOTOR_PIN2, True)
    GPIO.output(RIGHT_MOTOR_PIN1, False)
    GPIO.output(RIGHT_MOTOR_PIN2, True)

def left():
    GPIO.output(LEFT_MOTOR_PIN1, False)
    GPIO.output(LEFT_MOTOR_PIN2, True)
    GPIO.output(RIGHT_MOTOR_PIN1, True)
    GPIO.output(RIGHT_MOTOR_PIN2, False)

def right():
    GPIO.output(LEFT_MOTOR_PIN1, True)
    GPIO.output(LEFT_MOTOR_PIN2, False)
    GPIO.output(RIGHT_MOTOR_PIN1, False)
    GPIO.output(RIGHT_MOTOR_PIN2, True)

def stop():
    GPIO.output(LEFT_MOTOR_PIN1, False)
    GPIO.output(LEFT_MOTOR_PIN2, False)
    GPIO.output(RIGHT_MOTOR_PIN1, False)
    GPIO.output(RIGHT_MOTOR_PIN2, False)

def distance():
    GPIO.output(TRIG_PIN, True)
    time.sleep(0.00001)
    GPIO.output(TRIG_PIN, False)
    start_time = time.time()
    stop_time = time.time()

    while GPIO.input(ECHO_PIN) == 0:
        start_time = time.time()

    while GPIO.input(ECHO_PIN) == 1:
        stop_time = time.time()

    time_elapsed = stop_time - start_time
    distance = (time_elapsed * 34300) / 2  # speed of sound = 343 m/s
    return distance

# Movement loop
while True:
    dist = distance()

    if dist < 20:  # If obstacle is less than 20 cm away
        stop()
        time.sleep(0.5)  # Stop for 0.5 seconds
        left()  # Turn left
        time.sleep(1)  # Turn for 1 second
        forward()  # Move forward
    else:
        forward()  # Move forward
